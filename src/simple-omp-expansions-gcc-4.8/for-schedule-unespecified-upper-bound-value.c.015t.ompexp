
;; Function main (main, funcdef_no=0, decl_uid=1801, cgraph_uid=0)


OMP region tree

bb 2: gimple_omp_parallel
    bb 3: gimple_omp_for
    bb 4: GIMPLE_OMP_CONTINUE
    bb 5: GIMPLE_OMP_RETURN
bb 6: GIMPLE_OMP_RETURN

Merging blocks 2 and 12
Merging blocks 2 and 7
main ()
{
  int D.1818;
  int D.1816;
  int D.1817;
  int tt.2;
  int q.1;
  int D.1813;
  int D.1812;
  int i;
  int i;

  <bb 2>:
  __builtin_GOMP_parallel_start (main._omp_fn.0, 0B, 0);
  main._omp_fn.0 (0B);
  __builtin_GOMP_parallel_end ();
  return;

}



;; Function main._omp_fn.0 (main._omp_fn.0, funcdef_no=1, decl_uid=1808, cgraph_uid=1)

main._omp_fn.0 (void * .omp_data_i)
{
  int D.1828;
  int D.1827;
  int i;
  int D.1825;
  int D.1824;
  int D.1823;
  int tt.2;
  int q.1;
  int D.1820;
  int D.1819;

  <bb 11>:

  <bb 3>:
  D.1819 = __builtin_omp_get_num_threads ();
  D.1820 = __builtin_omp_get_thread_num ();
  q.1 = 1024 / D.1819;
  tt.2 = 1024 % D.1819;
  if (D.1820 < tt.2)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 10>:
  D.1823 = q.1 * D.1820;
  D.1824 = D.1823 + tt.2;
  D.1825 = D.1824 + q.1;
  if (D.1824 >= D.1825)
    goto <bb 5>;
  else
    goto <bb 8>;

  <bb 8>:
  i = D.1824;

  <bb 4>:
  D.1827 = a[i];
  D.1828 = D.1827 + 1;
  a[i] = D.1828;
  i = i + 1;
  if (i < D.1825)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 5>:

  <bb 6>:
  return;

  <bb 9>:
  tt.2 = 0;
  q.1 = q.1 + 1;
  goto <bb 10>;

}


